services:
  server:
    image: pub-sub-server:latest
    container_name: pub-sub-server
    env_file: sample.env
    build:
      context: server
      args:
        SERVER_PORT: ${SERVER_PORT}
    ports:
      - "${SERVER_PORT}:${SERVER_PORT}"
    healthcheck:
      test: [ "CMD-SHELL", "bin/grpc_health_probe-linux-amd64", "-addr=${SERVER_ADDRESS}:${SERVER_PORT}" ]
      interval: 10s
      retries: 3
      start_period: 10s
      timeout: 30s
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DB_NAME = ${DB_NAME}
      - DB_USER = ${DB_USER}
      - DB_PASSWORD = ${DB_PASSWORD}
      - DB_PORT = ${DB_PORT}
  db:
    image: postgres:latest
    env_file: sample.env
    restart: always
    container_name: pub-sub-db
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - pubsubdata:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:${DB_PORT}"
volumes:
  pubsubdata:
